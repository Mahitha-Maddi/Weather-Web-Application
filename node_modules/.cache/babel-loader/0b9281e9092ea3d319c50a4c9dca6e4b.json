{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\days.js\";\nimport React from 'react'; //import { Route, Link} from 'react-router-dom'\n//const   Day=({match}) => <p> {match.params.id}</p>\n//var x=props.city;\n//alert(x);\n//const Days = props => (\n\nclass Days extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._groupByDays = data => {\n      return data.reduce((list, item) => {\n        const forecastDate = item.dt_txt.substr(0, 10);\n        list[forecastDate] = list[forecastDate] || [];\n        list[forecastDate].push(item);\n        return list;\n      }, {});\n    };\n\n    this._getDayInfo = data => {\n      const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n      return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\n    };\n\n    this._getInfo = data => {\n      min = [];\n      max = [];\n      data.map(item => {\n        max.push(item.main.temp_max);\n        min.push(item.main.temp_min);\n      });\n      const minMax = {\n        min: Math.round(Math.min(...min)),\n        max: Math.round(Math.max(...max))\n      };\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"$\", minMax.min, \" and $\", minMax.max);\n    };\n  }\n\n  render() {\n    //const { url } = this.props.match\n    const {\n      forecasts\n    } = this.props.dataList;\n    const tiles = Object.values(this._groupByDays(forecasts)); // Edge case:\n    // When the webservice returns data for 6 calendar days during evenings as a result of offset,\n    // this ensures that we are showing only 5-days of forecast.\n\n    const forecastTiles = tiles.length > 5 ? tiles.slice(0, 5) : tiles;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"5 Day weather forecast\"), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"DAY\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"DESCRIPTION\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Min_Temp\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Max_temp\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"ICON\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, forecastTiles.map((item, i) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this._getDayInfo(item)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, item[0].weather[0].description), this._getInfo(item), \";\", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Days; //<Route path=\"/days/:id\" component={Days} />","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/days.js"],"names":["React","Days","Component","_groupByDays","data","reduce","list","item","forecastDate","dt_txt","substr","push","_getDayInfo","daysOfWeek","Date","dt","getDay","_getInfo","min","max","map","main","temp_max","temp_min","minMax","Math","round","render","forecasts","props","dataList","tiles","Object","values","forecastTiles","length","slice","i","weather","description","icon"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import { Route, Link} from 'react-router-dom'\r\n\r\n//const   Day=({match}) => <p> {match.params.id}</p>\r\n//var x=props.city;\r\n//alert(x);\r\n//const Days = props => (\r\nclass Days extends React.Component{\r\n    _groupByDays = data => {\r\n        return (data.reduce((list, item) => {\r\n          const forecastDate = item.dt_txt.substr(0,10);\r\n          list[forecastDate] = list[forecastDate] || [];\r\n          list[forecastDate].push(item);\r\n    \r\n          return list;\r\n        }, {}));\r\n      };\r\n\r\n      _getDayInfo = data => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\r\n      };\r\n\r\n      \r\n\r\n  _getInfo = (data) => {\r\n    min=[];\r\n     max=[];\r\n    data.map(item => {\r\n      max.push(item.main.temp_max);\r\n      min.push(item.main.temp_min);\r\n    });\r\n\r\n    const minMax = {\r\n      min: Math.round(Math.min(...min)),\r\n      max: Math.round(Math.max(...max)),\r\n    };\r\n  return (\r\n    <td>${minMax.min} and ${minMax.max}</td>\r\n  );}\r\n\r\n\r\n\r\n    render(){\r\n        //const { url } = this.props.match\r\n\r\n        \r\n    const { forecasts } = this.props.dataList;\r\n    const tiles = Object.values(this._groupByDays(forecasts));\r\n\r\n    // Edge case:\r\n    // When the webservice returns data for 6 calendar days during evenings as a result of offset,\r\n    // this ensures that we are showing only 5-days of forecast.\r\n    const forecastTiles = tiles.length > 5 ? tiles.slice(0, 5) : tiles;\r\n       \r\n    return (\r\n          <div>\r\n            <h1>5 Day weather forecast</h1>\r\n           \r\n            <table border='1'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DAY</th>\r\n                    <th>DESCRIPTION</th>\r\n                    <th>Min_Temp</th>\r\n                    <th>Max_temp</th>\r\n                    <th>ICON</th>\r\n                </tr></thead>\r\n                <tbody>\r\n         \r\n                {forecastTiles.map((item, i) =>  \r\n              <tr>\r\n                  <td>{this._getDayInfo(item)}</td>\r\n                  <td>{item[0].weather[0].description}</td>\r\n                  {this._getInfo(item)};\r\n                  <td><img src={`https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`} alt=\"\" ></img></td>\r\n              </tr>\r\n              \r\n                    )\r\n                }\r\n                  </tbody>\r\n            </table>\r\n            \r\n          </div>\r\n    );\r\n    }\r\n            \r\n}\r\n      \r\n    export default Days\r\n    //<Route path=\"/days/:id\" component={Days} />"]},"metadata":{},"sourceType":"module"}