{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\days.js\";\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nconst Day = ({\n  match\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, \" \", match.params.id); //var x=props.city;\n//alert(x);\n//const Days = props => (\n\n\nclass Days extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._getDayInfo = data => {\n      const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n      return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\n    };\n\n    this._getInfo = data => {\n      const min = [];\n      const max = [];\n      data.map(item => {\n        max.push(item.main.temp_max);\n        min.push(item.main.temp_min);\n      });\n      const minMax = {\n        min: Math.round(Math.min(...min)),\n        max: Math.round(Math.max(...max))\n      };\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, `${minMax.min} and ${minMax.max}`);\n    };\n\n    console.log(this.props);\n  }\n\n  render() {\n    //const { url } = this.props.match\n    // Edge case:\n    // When the webservice returns data for 6 calendar days during evenings as a result of offset,\n    // this ensures that we are showing only 5-days of forecast.\n    const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"5 Day weather forecast\"), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"DAY\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"DESCRIPTION\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Min_Temp\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Max_temp\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"ICON\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, forecastTiles.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: \"/days/{_getDayInfo(item)}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this._getDayInfo(item))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, item[0].weather[0].description), this._getInfo(item), \";\", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))))), React.createElement(Route, {\n      path: \"/days/:id\",\n      component: Day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/days.js"],"names":["React","Route","Link","Day","match","params","id","Days","Component","constructor","props","_getDayInfo","data","daysOfWeek","Date","dt","getDay","_getInfo","min","max","map","item","push","main","temp_max","temp_min","minMax","Math","round","console","log","render","forecastTiles","tiles","length","slice","weather","description","icon"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, Link} from 'react-router-dom'\r\n\r\nconst   Day=({match}) => <p> {match.params.id}</p>\r\n//var x=props.city;\r\n//alert(x);\r\n//const Days = props => (\r\nclass Days extends React.Component{\r\n  \r\nconstructor(props){\r\n    super(props);\r\n    console.log(this.props);\r\n}\r\n      _getDayInfo = data => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\r\n      };\r\n\r\n      \r\n\r\n  _getInfo = (data) => {\r\n    const min=[];\r\n     const max=[];\r\n    data.map(item => {\r\n      max.push(item.main.temp_max);\r\n      min.push(item.main.temp_min);\r\n    });\r\n\r\n    const minMax = {\r\n      min: Math.round(Math.min(...min)),\r\n      max: Math.round(Math.max(...max)),\r\n    };\r\n  return (\r\n    <td>{`${minMax.min} and ${minMax.max}`}</td>\r\n  );}\r\n\r\n\r\n    render(){\r\n        //const { url } = this.props.match\r\n\r\n        \r\n\r\n    // Edge case:\r\n    // When the webservice returns data for 6 calendar days during evenings as a result of offset,\r\n    // this ensures that we are showing only 5-days of forecast.\r\n    \r\n    const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\r\n       \r\n    return (\r\n          <div>\r\n            <h1>5 Day weather forecast</h1>\r\n           \r\n            <table border='1'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DAY</th>\r\n                    <th>DESCRIPTION</th>\r\n                    <th>Min_Temp</th>\r\n                    <th>Max_temp</th>\r\n                    <th>ICON</th>\r\n                </tr></thead>\r\n                <tbody>\r\n         \r\n                {forecastTiles.map((item) =>  (<tr>\r\n                    <td > <Link to=\"/days/{_getDayInfo(item)}\">\r\n                        {this._getDayInfo(item)}</Link></td>\r\n                    <td>{item[0].weather[0].description}</td>\r\n                    {this._getInfo(item)};\r\n                    <td><img src={`https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`} alt=\"\"></img></td>\r\n                </tr>) )\r\n                }\r\n                  </tbody>\r\n            </table>\r\n            \r\n    <Route path=\"/days/:id\" component={Day} />\r\n          </div>\r\n    );\r\n    }\r\n            \r\n}\r\n      \r\n    export default Days"]},"metadata":{},"sourceType":"module"}