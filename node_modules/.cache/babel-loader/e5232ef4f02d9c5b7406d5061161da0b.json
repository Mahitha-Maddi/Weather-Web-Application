{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\days.js\";\nimport React from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport DetailedInfo from './detailedInfo'; //const   DetailedInfo=({match}) => <div> {match.params.id}</div>\n\nclass Days extends React.Component {\n  constructor(props) {\n    super(props); //console.log(this.props);\n\n    this._getDayInfo = data => {\n      const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n      return daysOfWeek[new Date(data[0].dt_txt).getDay()];\n    };\n\n    this._getInfo = data => {\n      const min = [];\n      const max = [];\n      data.map(item => {\n        max.push(item.main.temp_max);\n        min.push(item.main.temp_min);\n      });\n      const minMax = {\n        min: Math.round(Math.min(...min)),\n        max: Math.round(Math.max(...max))\n      };\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, `${minMax.min}/ ${minMax.max}`);\n    };\n\n    this.hello = () => {\n      const {\n        tiles\n      } = this.props; //const forecastTiles=this.props.tiles;\n\n      this.setState({\n        data: tiles\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n    console.log(this.state.data);\n  }\n\n  render() {\n    // const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\n    const forecastTiles = this.props.tiles; // console.log(forecastTiles);\n\n    if (forecastTiles && forecastTiles.length) {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"5 Day weather forecast\"), React.createElement(\"table\", {\n        border: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"DAY\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"DESCRIPTION\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Min_Temp/Max_Temp\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"ICON\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, forecastTiles.map((item, i) => React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: `/days/${this._getDayInfo(item)}`\n        },\n        onClick: () => {\n          this.hello();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this._getDayInfo(item))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, item[0].weather[0].description), this._getInfo(item), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: `https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })))))), React.createElement(Route, {\n        path: \"/days/:id\",\n        render: props => React.createElement(DetailedInfo, {\n          data: this.state.data,\n          id: props.match.params.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.error);\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/days.js"],"names":["React","Route","Link","BrowserRouter","Router","DetailedInfo","Days","Component","constructor","props","_getDayInfo","data","daysOfWeek","Date","dt_txt","getDay","_getInfo","min","max","map","item","push","main","temp_max","temp_min","minMax","Math","round","hello","tiles","setState","state","console","log","render","forecastTiles","length","i","pathname","weather","description","icon","match","params","id","error"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport DetailedInfo from './detailedInfo'\r\n\r\n//const   DetailedInfo=({match}) => <div> {match.params.id}</div>\r\n\r\nclass Days extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(this.props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n        console.log(this.state.data)\r\n    }\r\n    _getDayInfo = data => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        return daysOfWeek[new Date(data[0].dt_txt).getDay()];\r\n    };\r\n\r\n\r\n    _getInfo = (data) => {\r\n        const min = [];\r\n        const max = [];\r\n        data.map(item => {\r\n            max.push(item.main.temp_max);\r\n            min.push(item.main.temp_min);\r\n        });\r\n\r\n        const minMax = {\r\n            min: Math.round(Math.min(...min)),\r\n            max: Math.round(Math.max(...max)),\r\n        };\r\n        return (\r\n            <td>{`${minMax.min}/ ${minMax.max}`}</td>\r\n        );\r\n    }\r\n\r\n\r\n    hello = () => {\r\n        const {tiles} = this.props;\r\n        //const forecastTiles=this.props.tiles;\r\n        this.setState({\r\n            data: tiles\r\n        });\r\n\r\n    };\r\n    render() {\r\n        // const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\r\n        const forecastTiles = this.props.tiles;\r\n        // console.log(forecastTiles);\r\n        \r\n        if (forecastTiles && forecastTiles.length) {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <h1>5 Day weather forecast</h1>\r\n                    <table border='1'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DAY</th>\r\n                                <th>DESCRIPTION</th>\r\n                                <th>Min_Temp/Max_Temp</th>\r\n                                <th>ICON</th>\r\n                            </tr></thead>\r\n                        <tbody>{forecastTiles.map((item, i) => (<tr key={i}>\r\n                            <td><Link to={{ pathname: `/days/${this._getDayInfo(item)}` }} onClick={() => { this.hello(); }}>{this._getDayInfo(item)}</Link></td>\r\n                            <td>{item[0].weather[0].description}</td>\r\n                            {this._getInfo(item)}\r\n                    <td><img src={`https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`} alt=\"\"></img></td>\r\n                        </tr>))\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <Route path=\"/days/:id\" render={(props) => <DetailedInfo data={this.state.data} id={props.match.params.id} />} />\r\n                </div>\r\n            </Router>\r\n        );\r\n                    }\r\n                    return (<h2>{this.props.error}</h2>);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Days"]},"metadata":{},"sourceType":"module"}