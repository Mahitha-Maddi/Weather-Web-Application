{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\detailedInfo.js\";\nimport React from \"react\"; //import ReactDOM from 'react-dom';\n\nclass DetailedInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getHour = time => time ? new Date(time).getHours() : new Date().getHours();\n\n    this.getDate = date => date ? new Date(date).getDate() : new Date().getDate();\n\n    this.displayMoreInfo = (item, i) => {\n      return React.createElement(\"div\", {\n        className: \"hourly-info\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hour-temperature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, `${Math.round(item.main.temp)}°C`), React.createElement(\"div\", {\n        className: \"hour-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, `${getHour(item.dt * 1000)}:00`));\n    };\n\n    this._getDayInfo = data => {\n      const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n      return data.filter(reading => daysOfWeek[new Date(reading[0].dt * 1000).getDay()].includes(match.params.id));\n      /*const tiles1 = Object.values(dailyData);\r\n      this.setState({\r\n      tiles: tiles1\r\n      });*/\n    };\n\n    console.log(this.props.data);\n  } //const {handle}= this.props.match.params;\n\n\n  render() {\n    const data = this.props.data;\n\n    const d = _getDayInfo(data); // const d=this.state.tiles;\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, console.log(data), d.map((item, i) => getHour(item.dt * 1000) > getHour() && getDate(item.dt * 1000) === getDate() ? displayMoreInfo(item, i) : getHour(item.dt * 1000) >= 5 && getHour(item.dt * 1000) <= 23 ? displayMoreInfo(item, i) : null));\n  }\n\n}\n/*const DetailedInfo = ({ data }) => {\r\n\r\n  \r\n  );\r\n};*/\n\n\nexport default DetailedInfo;","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/detailedInfo.js"],"names":["React","DetailedInfo","Component","constructor","props","getHour","time","Date","getHours","getDate","date","displayMoreInfo","item","i","Math","round","main","temp","dt","_getDayInfo","data","daysOfWeek","filter","reading","getDay","includes","match","params","id","console","log","render","d","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMtBC,OANsB,GAMZC,IAAI,IAAIA,IAAI,GAAG,IAAIC,IAAJ,CAASD,IAAT,EAAeE,QAAf,EAAH,GAA+B,IAAID,IAAJ,GAAWC,QAAX,EAN/B;;AAAA,SAOpBC,OAPoB,GAOVC,IAAI,IAAIA,IAAI,GAAG,IAAIH,IAAJ,CAASG,IAAT,EAAeD,OAAf,EAAH,GAA8B,IAAIF,IAAJ,GAAWE,OAAX,EAPhC;;AAAA,SAStBE,eATsB,GASJ,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3B,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEA,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,GAAEC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAL,CAAUC,IAArB,CAA2B,IADjC,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,GAAEZ,OAAO,CAACO,IAAI,CAACM,EAAL,GAAU,IAAX,CAAiB,KAD9B,CAJF,CADF;AAUD,KApBmB;;AAAA,SAqBlBC,WArBkB,GAqBHC,IAAD,IAAU;AACpB,YAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAnB;AAGD,aAAOD,IAAI,CAACE,MAAL,CAAYC,OAAO,IAAIF,UAAU,CAAC,IAAId,IAAJ,CAASgB,OAAO,CAAC,CAAD,CAAP,CAAWL,EAAX,GAAgB,IAAzB,EAA+BM,MAA/B,EAAD,CAAV,CAAoDC,QAApD,CAA6DC,KAAK,CAACC,MAAN,CAAaC,EAA1E,CAAvB,CAAP;AACC;;;;AAIH,KA9BiB;;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWgB,IAAvB;AAEH,GALL,CAMI;;;AA0BAW,EAAAA,MAAM,GAAE;AACJ,UAAMX,IAAI,GAAC,KAAKhB,KAAL,CAAWgB,IAAtB;;AACA,UAAMY,CAAC,GAACb,WAAW,CAACC,IAAD,CAAnB,CAFI,CAGL;;;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACES,OAAO,CAACC,GAAR,CAAYV,IAAZ,CADF,EAEGY,CAAC,CAACC,GAAF,CAAM,CAACrB,IAAD,EAAOC,CAAP,KACJR,OAAO,CAACO,IAAI,CAACM,EAAL,GAAU,IAAX,CAAP,GAA0Bb,OAAO,EAAjC,IAAuCI,OAAO,CAACG,IAAI,CAACM,EAAL,GAAU,IAAX,CAAP,KAA4BT,OAAO,EAA3E,GACEE,eAAe,CAACC,IAAD,EAAOC,CAAP,CADjB,GAEKR,OAAO,CAACO,IAAI,CAACM,EAAL,GAAU,IAAX,CAAP,IAA2B,CAA3B,IAAgCb,OAAO,CAACO,IAAI,CAACM,EAAL,GAAU,IAAX,CAAP,IAA2B,EAA3D,GACDP,eAAe,CAACC,IAAD,EAAOC,CAAP,CADd,GAEA,IALN,CAFH,CADF;AAYD;;AAhDD;AAkDA;;;;;;;AAMA,eAAeZ,YAAf","sourcesContent":["import React from \"react\";\r\n\r\n//import ReactDOM from 'react-dom';\r\n\r\nclass DetailedInfo extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.data);\r\n        \r\n    }\r\n    //const {handle}= this.props.match.params;\r\ngetHour = time => time ? new Date(time).getHours() : new Date().getHours();\r\n  getDate = date => date ? new Date(date).getDate() : new Date().getDate();\r\n\r\ndisplayMoreInfo = (item, i) => {\r\n    return (\r\n      <div className=\"hourly-info\" key={i}>\r\n        <div className=\"hour-temperature\">\r\n          {`${Math.round(item.main.temp)}°C`}\r\n        </div>\r\n        <div className=\"hour-of-the-day\">\r\n          {`${getHour(item.dt * 1000)}:00`}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n    _getDayInfo = (data) => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n      \r\n\r\n       return data.filter(reading => daysOfWeek[new Date(reading[0].dt * 1000).getDay()].includes(match.params.id));\r\n        /*const tiles1 = Object.values(dailyData);\r\n      this.setState({\r\n        tiles: tiles1\r\n      });*/\r\n    }\r\n    render(){\r\n        const data=this.props.data;\r\n        const d=_getDayInfo(data);\r\n       // const d=this.state.tiles;\r\n  return (\r\n    <div >\r\n     {console.log(data)} \r\n      {d.map((item, i) => (\r\n        (getHour(item.dt * 1000) > getHour() && getDate(item.dt * 1000) === getDate()) ? (\r\n          displayMoreInfo(item, i)\r\n         ) : getHour(item.dt * 1000) >= 5 && getHour(item.dt * 1000) <= 23 ? (\r\n            displayMoreInfo(item, i)\r\n         ) : null\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n}\r\n/*const DetailedInfo = ({ data }) => {\r\n\r\n  \r\n  );\r\n};*/\r\n\r\nexport default DetailedInfo;\r\n"]},"metadata":{},"sourceType":"module"}