{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\App.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom'\n//import logo from './logo.svg';\n\nimport './App.css';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Days from './days';\nimport Form from './form'; //import Notfound from './notfound'\n\nconst API_KEY = \"1047b4a8bd298fee185e1158ad30ecd1\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._groupByDays = data => {\n      return data.reduce((list, item) => {\n        const forecastDate = item.dt_txt.substr(0, 10);\n        list[forecastDate] = list[forecastDate] || [];\n        list[forecastDate].push(item);\n        return list;\n      }, {});\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const API_CALL = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=imperial`); //const API_CALL = await fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=${API_KEY}`);\n\n      const data = await API_CALL.json(); //const allDays= ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n      console.log(data);\n      const tiles1 = Object.values(this._groupByDays(data.list)); // const tiles = Object.values(this._groupByDays(data.list));\n      // const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n\n      this.setState({\n        tiles: tiles1 // dailyData :dailyData,\n        //error : \"\"\n\n      });\n    };\n\n    this.state = {\n      tiles: [] //dailyData :[],\n      //error : undefined\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"WELCOME TO 5 DAY WEATHER FORECAST\"), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Days, {\n      tiles: this.state.tiles //error={this.state.error}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/App.js"],"names":["React","Route","BrowserRouter","Router","Switch","Days","Form","API_KEY","App","Component","constructor","props","_groupByDays","data","reduce","list","item","forecastDate","dt_txt","substr","push","getWeather","e","preventDefault","city","target","elements","value","API_CALL","fetch","json","console","log","tiles1","Object","values","setState","tiles","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,SACEC,KADF,EAEEC,aAAa,IAAIC,MAFnB,EAGEC,MAHF,QAIO,kBAJP;AAKA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AAGA,MAAMC,OAAO,GAAE,kCAAf;;AACA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EACX;AAAC,UAAMA,KAAN;;AAAD,SAOAC,YAPA,GAOeC,IAAI,IAAI;AACrB,aAAQA,IAAI,CAACC,MAAL,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAClC,cAAMC,YAAY,GAAGD,IAAI,CAACE,MAAL,CAAYC,MAAZ,CAAmB,CAAnB,EAAqB,EAArB,CAArB;AACAJ,QAAAA,IAAI,CAACE,YAAD,CAAJ,GAAqBF,IAAI,CAACE,YAAD,CAAJ,IAAsB,EAA3C;AACAF,QAAAA,IAAI,CAACE,YAAD,CAAJ,CAAmBG,IAAnB,CAAwBJ,IAAxB;AAEA,eAAOD,IAAP;AACD,OANO,EAML,EANK,CAAR;AAOD,KAfD;;AAAA,SAkBAM,UAlBA,GAkBa,MAAOC,CAAP,IAAa;AAExBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAACF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAAlC;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDL,IAAK,UAASjB,OAAQ,iBAA5E,CAA5B,CALwB,CAOxB;;AACA,YAAMM,IAAI,GAAC,MAAMe,QAAQ,CAACE,IAAT,EAAjB,CARwB,CASxB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AAGA,YAAMoB,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKvB,YAAL,CAAkBC,IAAI,CAACE,IAAvB,CAAd,CAAf,CAbwB,CAezB;AACA;;AACC,WAAKqB,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEJ,MADK,CAEb;AACC;;AAHY,OAAd;AAMD,KAzCD;;AACE,SAAKK,KAAL,GAAW;AACXD,MAAAA,KAAK,EAAE,EADI,CAEX;AACA;;AAHW,KAAX;AAIA;;AAsCFE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKlB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWD,KADpB,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAUD;;AAxD+B;;AA0DlC,eAAe7B,GAAf","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom'\n//import logo from './logo.svg';\nimport './App.css';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom'\nimport Days from './days'\nimport Form from './form'\n//import Notfound from './notfound'\n\n\nconst API_KEY =\"1047b4a8bd298fee185e1158ad30ecd1\";\nclass App extends React.Component {\n  constructor(props)\n  {super(props);\n    this.state={\n    tiles: []\n    //dailyData :[],\n    //error : undefined\n  }}\n\n  _groupByDays = data => {\n    return (data.reduce((list, item) => {\n      const forecastDate = item.dt_txt.substr(0,10);\n      list[forecastDate] = list[forecastDate] || [];\n      list[forecastDate].push(item);\n\n      return list;\n    }, {}));\n  };\n    \n\n  getWeather = async (e) => {\n   \n    e.preventDefault();\n    const city=e.target.elements.city.value;\n    \n    const API_CALL = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=imperial`); \n   \n    //const API_CALL = await fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=${API_KEY}`);\n    const data=await API_CALL.json();\n    //const allDays= ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    console.log(data);\n\n\n    const tiles1 = Object.values(this._groupByDays(data.list));\n    \n   // const tiles = Object.values(this._groupByDays(data.list));\n   // const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n    this.setState({\n      tiles: tiles1\n     // dailyData :dailyData,\n      //error : \"\"\n    });\n  \n  }\n\n  render() {\n    return (\n      <div>\n        <h1>WELCOME TO 5 DAY WEATHER FORECAST</h1>\n        <Form getWeather={this.getWeather}/>\n        <Days\n          tiles={this.state.tiles}\n          //error={this.state.error}\n         />\n        </div>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}