{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahit\\\\OneDrive\\\\Documents\\\\WebDesign\\\\react_assignment\\\\routing\\\\src\\\\days.js\";\nimport React from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport DetailedInfo from './detailedInfo'; //const   DetailedInfo=({match}) => <div> {match.params.id}</div>\n\nclass Days extends React.Component {\n  constructor(props) {\n    super(props); //console.log(this.props);\n\n    this._getDayInfo = data => {\n      const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n      return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\n    };\n\n    this._getInfo = data => {\n      const min = [];\n      const max = [];\n      data.map(item => {\n        max.push(item.main.temp_max);\n        min.push(item.main.temp_min);\n      });\n      const minMax = {\n        min: Math.round(Math.min(...min)),\n        max: Math.round(Math.max(...max))\n      };\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, `${minMax.min}/ ${minMax.max}`);\n    };\n\n    this.hello = () => {\n      const {\n        tiles,\n        get,\n        set\n      } = this.props; //const forecastTiles=this.props.tiles;\n\n      this.setState({\n        data: tiles\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n    console.log(this.state.data);\n  }\n\n  render() {\n    // const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\n    const forecastTiles = this.props.tiles; // console.log(forecastTiles);\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"5 Day weather forecast\"), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"DAY\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"DESCRIPTION\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Min_Temp/Max_Temp\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"ICON\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, forecastTiles.map((item, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: `/days/${this._getDayInfo(item)}`\n      },\n      onClick: () => {\n        this.hello();\n        this.xyz();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this._getDayInfo(item))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item[0].weather[0].description), this._getInfo(item), \";\", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))))), React.createElement(Route, {\n      path: \"/days/:id\",\n      render: props => React.createElement(DetailedInfo, {\n        data: this.state.data,\n        id: props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["C:/Users/mahit/OneDrive/Documents/WebDesign/react_assignment/routing/src/days.js"],"names":["React","Route","Link","BrowserRouter","Router","DetailedInfo","Days","Component","constructor","props","_getDayInfo","data","daysOfWeek","Date","dt","getDay","_getInfo","min","max","map","item","push","main","temp_max","temp_min","minMax","Math","round","hello","tiles","get","set","setState","state","console","log","render","forecastTiles","i","pathname","xyz","weather","description","icon","match","params","id"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, Link,BrowserRouter as Router} from 'react-router-dom'\r\nimport DetailedInfo from './detailedInfo'\r\n\r\n//const   DetailedInfo=({match}) => <div> {match.params.id}</div>\r\n\r\nclass Days extends React.Component{\r\n  \r\nconstructor(props){\r\n    super(props);\r\n    //console.log(this.props);\r\n    this.state={\r\n        data:[]\r\n      \r\n}\r\nconsole.log(this.state.data)}\r\n      _getDayInfo = data => {\r\n        const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\r\n      };\r\n\r\n\r\n  _getInfo = (data) => {\r\n    const min=[];\r\n     const max=[];\r\n    data.map(item => {\r\n      max.push(item.main.temp_max);\r\n      min.push(item.main.temp_min);\r\n    });\r\n\r\n    const minMax = {\r\n      min: Math.round(Math.min(...min)),\r\n      max: Math.round(Math.max(...max)),\r\n    };\r\n  return (\r\n    <td>{`${minMax.min}/ ${minMax.max}`}</td>\r\n  );}\r\n\r\n \r\n hello=()=>{\r\n     const { tiles, get, set } = this.props;\r\n    //const forecastTiles=this.props.tiles;\r\n    this.setState({\r\n        data: tiles\r\n    });\r\n\r\n };\r\n\r\n\r\n    render(){\r\n       \r\n    \r\n   // const forecastTiles = this.props.tiles.length > 5 ? this.props.tiles.slice(0, 5) : this.props.tiles;\r\n   const forecastTiles=this.props.tiles;\r\n  // console.log(forecastTiles);\r\n\r\n    return (\r\n        <Router>\r\n          <div>\r\n            <h1>5 Day weather forecast</h1>\r\n           \r\n            <table border='1'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DAY</th>\r\n                    <th>DESCRIPTION</th>\r\n                    <th>Min_Temp/Max_Temp</th>\r\n                    <th>ICON</th>\r\n                </tr></thead>\r\n                <tbody>{forecastTiles.map((item,i)=>(<tr key={i}>\r\n                   <td><Link to={{pathname :`/days/${this._getDayInfo(item)}`}} onClick={() => {this.hello(); this.xyz()}}>{this._getDayInfo(item)}</Link></td>\r\n                    <td>{item[0].weather[0].description}</td>\r\n                    {this._getInfo(item)};\r\n                    <td><img src={`https://openweathermap.org/img/w/${item[0].weather[0].icon}.png`} alt=\"\"></img></td>\r\n                </tr>))\r\n                }\r\n            </tbody>\r\n            </table>\r\n            \r\n    <Route path=\"/days/:id\" render={(props)=><DetailedInfo data={this.state.data} id={props.match.params.id}/>}/>\r\n          </div>\r\n          </Router>\r\n    );\r\n    }\r\n\r\n   \r\n}        \r\n\r\n    export default Days"]},"metadata":{},"sourceType":"module"}